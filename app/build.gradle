apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply from: 'credentials.gradle'

def keyStorePassword = getKeyStorePassword()
def keyStoreAlias = getKeyStoreAlias()
def keyPass = getKeyPassword()

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword = keyStorePassword
            keyAlias = keyStoreAlias
            keyPassword = keyPass
        }
    }

    defaultConfig {
        applicationId "io.vehiclehistory"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 130
        versionName "1.3"
        buildConfigField "boolean", "USE_CRASHLYTICS", "false"

        buildConfigField 'String', 'SHARED_PREFS_PASSWORD', '"' + getSharedPrefsPassword() + '"'
        buildConfigField 'String', 'API_LOGIN', '"' + getApiLogin() + '"'
        buildConfigField 'String', 'API_PASSWORD', '"' + getApiPassword() + '"'
        buildConfigField 'String', 'API_CLIENT', '"' + getApiClient() + '"'
        buildConfigField 'String', 'API_CLIENT_PASSWORD', '"' + getApiClientPassword() + '"'
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix " Debug"
            debuggable true
        }

        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '23.1.1'
    final RETROFIT_VERSION = '2.0.0-beta3'
    final OKHTTP_VERSION = '3.0.1'
    final DAGGER_VERSION = '2.0.2'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    compile 'com.jakewharton.timber:timber:4.1.0'

    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-v13:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"

    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'

    compile 'joda-time:joda-time:2.7'
    compile 'org.apache.commons:commons-lang3:3.4'

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    // APT dependencies
    apt daggerCompiler
    testApt daggerCompiler
    androidTestApt daggerCompiler
}
